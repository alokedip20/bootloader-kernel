;                                 KERNEL.ASM THIS HAS ALREADY BEEN SWITCHED TO 32BIT PROTECTED MODE


bits 32				; THIS IS A NASM DIRECTIVE FOR 32BIT 
section .text
;				 AS GRUB CAN NOT BOOT WITHOUR MULTIBOOT SPECIFICATION SO WE HAVE TO ADD A MUTIBOOT HEADER CONTAINING 3 FIELDS
        align 4			
        dd 0x1BADB002            ;MAGIC NUMBER
        dd 0x00                  ;FLAGS SET TO ZERO
        dd -(0x1BADB002 + 0x00) ;CHECKSUM : ITS VALUE SUCH THAT MAGIC+FLAG+CHECKSUM=0

global start			 ; THIS IS THE START SECTION AND THIS IS GLOBAL BECAUSE LINKER CAN UNDERSTAND THE SECTION WHERE TO LINK
extern os	        	 ; OS IS THE FUNCTION DEFINED IN kernel.c file

start:
  cli 				; CLEAR INTERUPTS SO NO INTERUPTS CAN OCCUR AND CPU CAN BE IN HALTING STATE
  mov esp, stack_space		; AS WE NEED SOME STACK SPACE TO INVOKE THE FUNCTION SO WE HAVE ALLOTED 10KB STACK SPACE.
  call os
  jmp $		 		; INFINITE LOOP 

section .bss
resb 10240			; resb THEY ARE USED TO DECLARE UNINITIALIZED STORAGE SPACE (IN BYTES) AND ARE USED IN BSS SECTION OF A MODULE
stack_space:			; ASSIGN THE RESERVED SPACE 10KB TO THE STACK SPACE
